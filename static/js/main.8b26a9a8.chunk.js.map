{"version":3,"sources":["components/header/header.js","services/gotService.js","components/spinner/spinner.js","components/errorMessage/error.jpg","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/itemList/itemList.js","components/itemDetails/itemDetails.js","components/rowBlock/rowBlock.js","components/pages/characterPage.js","components/pages/housePage.js","components/pages/bookPage.js","components/pages/bookItemPage.js","components/app/app.js","index.js"],"names":["Header","className","to","GotService","constructor","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllCharacters","characters","map","_transformCharacter","getCharacter","id","character","getAllBooks","books","_transformBook","getBook","book","getAllHouses","houses","_transformHouse","getHouse","house","char","this","_extractId","name","isSet","gender","born","died","culture","numberOfPages","publisher","released","substring","region","words","coatOfArms","data","item","match","Spinner","ErrorMessage","src","img","alt","RandomChar","Component","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","then","catch","componentDidMount","timerId","setInterval","componentWillUnmount","clearInterval","render","spinner","errorMessage","content","View","ItemList","itemList","getData","props","renderItems","arr","label","renderItem","onClick","onItemSelected","items","ItemDetails","onItemLoading","updateItem","itemId","componentDidUpdate","prevProps","itemLabel","fields","React","Children","children","child","cloneElement","Field","field","RowBlock","left","right","Row","Col","md","CharacterPage","selectedChar","onCharSelected","componentDidCatch","itemDetails","HousePage","selectedHouse","onHouseSelected","BookPage","history","push","withRouter","BookItemPage","bookId","type","App","randomCharVisible","onRandomCharToogle","buttonText","Container","lg","size","offset","path","component","exact","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8b26a9a8.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './header.sass';\n\n\nconst Header = () => {\n    return (\n        <div className='header-block'>\n            <h4 className=\"header-label\">\n                <Link to='/'>\n                Game of Thrones\n                </Link>\n            </h4>\n            <div className='header-link'>\n                <li>\n                    <Link to='/characters/'>Characters</Link>\n                </li>\n                <li>\n                    <Link to='/houses/'>Houses</Link>\n                </li>\n                <li>\n                    <Link to='/books/'>Books</Link>  \n                </li>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","export default class GotService {\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, received ${res.status}`);\n        }\n        return await res.json();\n    }\n    getAllCharacters = async () => {\n        const characters = await this.getResource('/characters?page=6&pageSize=6');\n        return characters.map(this._transformCharacter);\n    }\n    getCharacter = async (id) => {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n    getAllBooks = async () => {\n        const books = await this.getResource('/books?pageSize=6');\n        return books.map(this._transformBook);\n    }\n    getBook = async (id) => {\n        const book = await this.getResource(`/books/${id}`);\n        return this._transformBook(book);\n    }\n    getAllHouses = async () => {\n        const houses = await this.getResource('/houses?page=2&pageSize=6');\n        return houses.map(this._transformHouse);\n    }\n    getHouse = async (id) => {\n        const house = await this.getResource(`/houses/${id}`);\n        return this._transformHouse(house);\n    }\n    isSet(data) {\n        if (data) {\n            return data;\n        } else {\n            return \"no data :(\";\n        }  \n    }\n    _extractId(item) {\n        const idRegExp = /\\/([0-9]*)$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: this._extractId(char),\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died),\n            culture: this.isSet(char.culture)\n        }\n    }\n    _transformBook = (book) => {\n        return {\n            id: this._extractId(book),\n            name: this.isSet(book.name),\n            numberOfPages: this.isSet(book.numberOfPages),\n            publisher: this.isSet(book.publisher),\n            released: this.isSet(book.released).substring(0, 4)\n        }\n    }\n    _transformHouse = (house) => {\n        return {\n            id: this._extractId(house),\n            name: this.isSet(house.name),\n            region: this.isSet(house.region),\n            words: this.isSet(house.words),\n            coatOfArms: this.isSet(house.coatOfArms)\n        }\n    }\n}","import React from 'react';\nimport './spinner.sass';\n\nconst Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-spinner-1hnija061rv\">\n            <div className=\"ldio-bio29zu4ddv\">\n                <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\n            </div>\n        </div>\n    )\n}\nexport default Spinner;\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/error.52a15638.jpg\";","import React from 'react';\n\nimport './errorMessage.sass';\nimport img from './error.jpg';\n\nconst ErrorMessage = () => {\n    return (\n        <>\n        <div className=\"error-message\">Something went wrong!</div>\n        <img src={img} alt=\"error\"/>\n        </>   \n    ) \n}\nexport default ErrorMessage;","import React, {Component} from 'react';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport './randomChar.sass';\n\nexport default class RandomChar extends Component {\n    gotService = new gotService();\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 1500); \n    }\n    componentWillUnmount() {\n        clearInterval(this.timerId); \n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    updateChar = () => {\n        const id = Math.floor(Math.random() * 140 + 25);\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n    \n        const spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const content = !( loading || error ) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>   \n        )\n    }\n}\n\nconst View = ({char}) => {\n    const { name, gender, born, died, culture } = char;\n    return (\n        <>\n            <h4>{name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}\n","import React, {Component} from 'react';\nimport Spinner from '../spinner/spinner';\n\nimport './itemList.sass';\nimport ErrorMessage from '../errorMessage/errorMessage';\nexport default class ItemList extends Component {\n    state = {\n        itemList: null,\n        loading: true,\n        error: false\n    }\n    componentDidMount() {\n        const {getData} = this.props;\n        getData()\n            .then((itemList) => {\n                this.setState({\n                    itemList\n                })\n            })\n            .catch(this.onError);\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    renderItems(arr) {\n        return arr.map((item) => {\n            const {id} = item;\n            const label = this.props.renderItem(item);\n            return (\n                <li \n                    key={id} \n                    className=\"list-group-item\"\n                    onClick={ () => this.props.onItemSelected(id) }>\n                    {label}\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const {itemList, loading, error} = this.state;\n\n        if (!itemList && loading) {\n            return <Spinner/>\n        }\n        if (error) {\n            return <ErrorMessage/>\n        }\n\n        const items = this.renderItems(itemList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}","import React, {Component} from 'react';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nimport './itemDetails.sass';\n\nexport default class ItemDetails extends Component {\n    state = {\n        item: null,\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateItem();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.itemId !== prevProps.itemId) {\n            this.onItemLoading();\n            this.updateItem();\n        } \n    }\n\n    onItemLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updateItem = () => { \n        const {itemId, getData} = this.props;\n        if (!itemId) {\n            return\n        }\n        getData(itemId)\n        .then((item) => {\n            this.setState({\n                item,\n                loading: false\n            })\n        })\n        .catch(this.onError);\n    }\n\n    render() {\n        const { item, loading, error } = this.state;\n        const {itemLabel} = this.props;\n        if (!item) {\n            return <span className=\"select-error\">{itemLabel}</span>\n        }\n    \n        let spinner = loading ? <Spinner/> : null;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const content = !( loading || error ) ? <View \n                                                    item={item} \n                                                    fields={\n                                                        React.Children.map(this.props.children, (child) => {\n                                                            return React.cloneElement(child, {item})\n                                                        })\n                                                    }\n                                                /> : null;\n        return (\n            <div className=\"item-details rounded\">\n                {spinner}\n                {errorMessage}\n                {content}   \n            </div>\n        );                \n    }\n}\nconst Field = ({item, field, label}) =>{\n    return (\n        <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"term\">{label}</span>\n            <span>{item[field]}</span>\n        </li>\n    )\n}\nexport {Field};\n\nconst View = ({item, fields}) => {\n    const {name} = item;\n    return (\n        <>\n            <h4>{name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                {fields}\n            </ul>   \n        </>\n    )\n}\n\n","import React from 'react';\nimport {Col, Row} from 'reactstrap';\n\nconst RowBlock = ({left, right}) => {\n    return (\n        <Row>\n            <Col md='5'>\n                {left}\n            </Col>\n            <Col md='7'>\n                {right}\n            </Col>\n        </Row>\n    )     \n}\nexport default RowBlock;","import React, {Component} from 'react';\nimport ItemList from '../itemList/itemList';\nimport ItemDetails, {Field} from '../itemDetails/itemDetails';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport gotService from '../../services/gotService';\nimport RowBlock from '../rowBlock/rowBlock';\nexport default class CharacterPage extends Component {\n    gotService = new gotService();\n    state = {\n        selectedChar : null,\n        error: false\n    }\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render () {\n        const {selectedChar, error} = this.state;\n        if (error) {\n            return <ErrorMessage/>\n        }\n        const itemList = (\n            <ItemList \n                onItemSelected={this.onCharSelected}\n                getData={this.gotService.getAllCharacters}\n                renderItem={ ({name}) => name}/>\n        )\n        const itemDetails = (\n            <ItemDetails \n                itemId={selectedChar}\n                itemLabel={\"Please select a character\"}\n                getData={ () => this.gotService.getCharacter(selectedChar) }>\n                <Field field='gender' label='Gender'/>\n                <Field field='born' label='Born'/>\n                <Field field='died' label='Died'/>\n                <Field field='culture' label='Culture'/>\n            </ItemDetails>\n        )\n        return (\n            <RowBlock left={itemList} right={itemDetails}/>    \n        )   \n    }\n}","import React, {Component} from 'react';\nimport ItemList from '../itemList/itemList';\nimport ItemDetails, {Field} from '../itemDetails/itemDetails';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport gotService from '../../services/gotService';\nimport RowBlock from '../rowBlock/rowBlock';\n\nexport default class HousePage extends Component {\n    gotService = new gotService();\n    state = {\n        selectedHouse : null,\n        error: false\n    }\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n    onHouseSelected = (id) => {\n        this.setState({\n            selectedHouse: id\n        })\n    }\n\n    render () {\n        const {selectedHouse, error} = this.state;\n        if (error) {\n            return <ErrorMessage/>\n        }\n        const itemList = (\n            <ItemList \n                onItemSelected={this.onHouseSelected}\n                getData={this.gotService.getAllHouses}\n                renderItem={ (item) => item.name }/>\n        )\n        const itemDetails = (\n            <ItemDetails \n                itemId={selectedHouse}\n                itemLabel={\"Please select a house\"}\n                getData={ () => this.gotService.getHouse(selectedHouse) }>\n                <Field field='region' label='Region'/>\n                <Field field='words' label='Words'/>\n                <Field field='coatOfArms' label='Coat of Arms'/>\n            </ItemDetails>\n        )\n        return (\n            <RowBlock left={itemList} right={itemDetails}/>    \n        )   \n    }\n}","import React, {Component} from 'react';\nimport {Col, Row} from 'reactstrap';\nimport ItemList from '../itemList/itemList';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport gotService from '../../services/gotService';\nimport {withRouter} from 'react-router-dom';\nclass BookPage extends Component {\n    \n    gotService = new gotService();\n    \n    state = {\n        error: false\n    }\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n\n    render () {\n        const {error} = this.state;\n        if (error) {\n            return <ErrorMessage/>\n        }\n        return (\n            <Row>\n                <Col md='2'></Col>\n                <Col md='8'>\n                    <ItemList\n                        onItemSelected={ (itemId) => {\n                            this.props.history.push(itemId)\n                        } }\n                        getData={this.gotService.getAllBooks}\n                        renderItem={ (item) => item.name }/>\n                </Col>\n                <Col md='2'></Col>\n            </Row>               \n        )   \n    }\n}\nexport default withRouter(BookPage);","import React, {Component} from 'react';\nimport {Col, Row} from 'reactstrap';\nimport ItemDetails, {Field} from '../itemDetails/itemDetails';\nimport gotService from '../../services/gotService';\nimport {Link} from 'react-router-dom';\n\nexport default class BookItemPage extends Component {\n    gotService = new gotService();\n\n    render () {\n        return (\n            <Row>\n                <Col md='2'></Col>\n                <Col md='8'>\n                    <ItemDetails \n                    itemId={this.props.bookId}\n                    itemLabel={\"\"}\n                    getData={ () => this.gotService.getBook(this.props.bookId) }>\n                        <Field field='numberOfPages' label='Pages'/>\n                        <Field field='publisher' label='Publisher'/>\n                        <Field field='released' label='Release Year'/>\n                    </ItemDetails>\n                </Col>\n                <Col md='2'>\n                    <button \n                        type=\"button\"\n                        className=\"btn main-btn\">\n                        <Link to='/books/'>back to books</Link>\n                    </button>\n                </Col>\n            </Row>     \n        )   \n    }\n}","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header/header';\nimport RandomChar from '../randomChar/randomChar';\nimport CharacterPage from '../pages/characterPage';\nimport HousePage from '../pages/housePage';\nimport BookPage from '../pages/bookPage';\nimport BookItemPage from '../pages/bookItemPage';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport './app.sass';\n\nexport default class App extends Component {\n\n    state = {\n        randomCharVisible: false,\n        error: false\n    }\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n\n    onRandomCharToogle = () => {\n        this.setState(({randomCharVisible}) => {\n            return {\n                randomCharVisible: !randomCharVisible\n            }\n        })\n    }\n    \n    render () {\n        const {randomCharVisible, error} = this.state;\n        if (error) {\n            return <ErrorMessage/>\n        }\n        let buttonText = \"Hide Random Character\";\n        if (!randomCharVisible) {\n            buttonText = \"Show Random Character\";\n        }\n        const char = randomCharVisible ? <RandomChar/> : null;\n        \n        return (\n            <Router>\n                <> \n                    <Container>\n                        <Header />\n                    </Container>\n                    <Container>\n                        <Row>\n                            <Col lg={{size: 5, offset: 0}} className=\"random-char-block\">\n                            <button \n                                type=\"button\"\n                                className=\"btn main-btn\"\n                                onClick={this.onRandomCharToogle}>{buttonText}\n                            </button>\n                            {char}\n                            </Col>\n                        </Row>\n                        <Route path='/characters' component={CharacterPage}/>\n                        <Route path='/houses' component={HousePage}/>\n                        <Route path='/books' exact component={BookPage}/>\n                        <Route path='/books/:id' render={\n                            ({match}) => {\n                                const {id} = match.params;\n                            return <BookItemPage bookId={id} />}\n                        }/>\n                    </Container>\n                </>\n            </Router>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.sass';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}